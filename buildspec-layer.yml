version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18
      python: 3.9
    commands:
      - echo "Creating Lambda Layer directory..."
      - mkdir -p lambda-layers/nodejs/

      # ✅ Unzip unittest-artifact.zip (from unittest build stage output)
      - echo "Unzipping unittest-artifact.zip..."
      - unzip -o unittest-artifact.zip -d extracted-files/

      # ✅ List extracted files for debugging
      - echo "Listing extracted files..."
      - ls -R extracted-files/

      # ✅ Move dependencies to Lambda Layer
      - echo "Moving dependencies to Lambda Layer..."
      - mv extracted-files/node_modules lambda-layers/nodejs/
      - mv extracted-files/package.json lambda-layers/nodejs/
      - mv extracted-files/package-lock.json lambda-layers/nodejs/

      # ✅ Zip the Lambda Layer
      - echo "Zipping Lambda Layer..."
      - cd lambda-layers && zip -r layer.zip nodejs && cd ..

  pre_build:
    commands:
      - echo "Checking if S3 bucket exists..."
      - |
        if ! aws s3 ls "s3://$S3_BUCKET" ; then
          echo "S3 bucket $S3_BUCKET does not exist. Creating..."
          aws s3 mb "s3://$S3_BUCKET" --region "$REGION"
        else
          echo "S3 bucket $S3_BUCKET already exists."
        fi

  build:
    commands:
      - echo "Listing all files in the source directory..."
      - ls -R $CODEBUILD_SRC_DIR  # Debugging step
      - echo "Checkkkkkkkkkkkkkkk"
      - ls -R $CODEBUILD_SRC_DIR/template


      - echo "Uploading Lambda Layer to S3..."
      - aws s3 cp lambda-layers/layer.zip s3://$S3_BUCKET/lambda-layers/

      - echo "Packaging SAM template..."
      - sam package --debug --template-file template/templateShell.yaml --s3-bucket dev-taskproject-cloudformation-bucket --region us-east-1 --output-template-file packaged-template.yaml





artifacts:
  files:
    - lambda-layers/layer.zip
    - packaged-template.yaml  # ✅ Pass the packaged template to the next stage
